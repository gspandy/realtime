<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.netease.beauty.realtime</groupId>
	<artifactId>beauty-realtime</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<repositories>
		<repository>
			<id>netease_repo</id>
			<url>http://mvn.hz.netease.com/artifactory/repo</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>netease_release</id>
			<name>netease_release</name>
			<url>http://mvn.hz.netease.com/artifactory/libs-releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>netease_snapshots</id>
			<name>netease_snapshots</name>
			<url>http://mvn.hz.netease.com/artifactory/libs-snapshots</url>
		</repository>
	</repositories>

	<distributionManagement>
		<snapshotRepository>
			<id>netease_snapshots</id>
			<name>netease_snapshots</name>
			<url>http://mvn.hz.netease.com/artifactory/libs-snapshots</url>
		</snapshotRepository>
		<repository>
			<id>netease_repo</id>
			<name>netease_repo</name>
			<url>http://mvn.hz.netease.com/artifactory/libs-releases</url>
		</repository>
	</distributionManagement>


	<properties>
		<storm.version>1.0.2</storm.version>
		<env.conf>local</env.conf>
		<kafka.version>0.9.0.0</kafka.version>
		<fastjson.version>1.2.0</fastjson.version>
		<spring.version>4.0.8.RELEASE</spring.version>
		<testng.version>6.8.21</testng.version>
		<redis.version>2.6.2</redis.version>
		<mysql.version>5.1.27</mysql.version>
		<commons-lang.version>2.6</commons-lang.version>
		<spark.version>1.3.0</spark.version>
		<json-lib.version>2.4</json-lib.version>
		<jackson.version>1.9.7</jackson.version>
	</properties>

	<dependencies>
		<!-- storm -->
		<dependency>
			<groupId>org.apache.storm</groupId>
			<artifactId>storm-core</artifactId>
			<version>${storm.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Kafka -->
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>${kafka.version}</version>
		</dependency>

		<!-- json -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>${json-lib.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-lgpl</artifactId>
			<version>${jackson.version}</version>
		</dependency>


		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- redis -->
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${redis.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<!-- mysql driver -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>

		<!-- 杭研print -->
		<dependency>
			<groupId>com.netease.print</groupId>
			<artifactId>print-dao</artifactId>
			<version>3.1.6</version>
			<exclusions>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- commons -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons-lang.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.3</version>
		</dependency>

		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- testng -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- spark -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_2.10</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming_2.10</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming-kafka_2.10</artifactId>
			<version>${spark.version}</version>
		</dependency>


		<dependency>
			<groupId>jdk.tools</groupId>
			<artifactId>jdk.tools</artifactId>
			<version>1.7</version>
			<scope>system</scope>
			<systemPath>${JAVA_HOME}/lib/tools.jar</systemPath>
		</dependency>
	</dependencies>


	<build>
		<finalName>beauty-realtime</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>utf8</encoding>
				</configuration>
			</plugin>
			<!-- run local storm -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					<mainClass>org.dvto.storm.Topology</mainClass>
					<classpathScope>compile</classpathScope>
				</configuration>
			</plugin>

			<!-- 组装插件，用于将项目中依赖的jar包都进行组装，最终打成一个大的jar包 -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.netease.beauty.realtime.demo.MainTopology</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-my-jar-with-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources/config</directory>
				<filtering>true</filtering>
				<includes>
					<!-- 此处不能用application-${env.conf}.properties的方式，否则无法将properties文件正常打包到jar-with-dependencies.jar中 -->
					<include>${env.conf}/application.properties</include>
					<include>spring-beans.xml</include>
				</includes>
				<targetPath>./config/</targetPath>
			</resource>
		</resources>
	</build>
</project>